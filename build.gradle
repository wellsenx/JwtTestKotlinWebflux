buildscript {
    apply from: "artifactory.gradle"

    ext {
        kotlinVersion = '1.3.21'
        springBootVersion = '2.1.3.RELEASE'
    }
    repositories {
        maven {
            url "${artifactory_contextUrl}/${alfadigitalRepositoryName}"
            credentials {
                username = artifactory_user
                password = artifactory_password
            }
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jfrog.buildinfo:build-info-extractor-gradle:4.9.1")
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2")
    }
}

allprojects {
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'maven-publish'

    repositories {
        maven {
            url "${artifactory_contextUrl}/${alfadigitalRepositoryName}"
            credentials {
                username = artifactory_user
                password = artifactory_password
            }
        }
    }
}

group = 'com.wellsen'
version = '1.0.1'

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.sonarqube'
apply from: 'artifactory-config.gradle'
apply from: 'jacoco-config.gradle'
apply from: 'sonarqube-config.gradle'

sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

sourceSets {
    main.kotlin.srcDirs = ['src/main/kotlin', 'src/main/java']
    main.java.srcDirs = ['src/main/kotlin', 'src/main/java']
    test.kotlin.srcDirs = ['src/test/kotlin', 'src/test/java']
    test.java.srcDirs = ['src/test/kotlin', 'src/test/java']
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.9.7")
    implementation("io.jsonwebtoken:jjwt:0.7.0")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    testImplementation('org.springframework.boot:spring-boot-starter-webflux')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

//create a single Jar with all dependencies
task buildFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.wellsen.jwttestkotlinwebflux.JwttestKotlinWebfluxApplication'
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}